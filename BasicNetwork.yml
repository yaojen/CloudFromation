Parameters:
  VpcCIDR:
    Type: String
    Default: 10.1.0.0/16
    Description: 'pleals input VPCCIDR'
  FirstPublicCIDR:
    Type: String
    Default: 10.1.1.0/24
    Description: 'please input first public subnet CIDR'
  SecondPublicCIDR:
    Type: String
    Default: 10.1.2.0/24
    Description: 'please input Second public subnet CIDR'
  FirstPrivateCIDR:
    Type: String
    Default: 10.1.3.0/24
    Description: 'please input first private subnet CIDR'
  SecondPrivateCIDR:
    Type: String
    Default: 10.1.4.0/24
    Description: 'please input Second Private subnet CIDR'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Lable:
          default:'kevin test'
        Parameters:
          - VpcCIDR
          - FirstPublicCIDR
          - SecondPublicCIDR
          - FirstPrivateCIDR
          - SecondPrivateCIDR
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
      - Key: stack
        Value: production
  FirstPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref FirstPublicCIDR
      AvailabilityZone: !Select [0,!GetAZs '' ]
  SecondPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref SecondPublicCIDR
      AvailabilityZone: !Select [1,!GetAZs '']
  FirstPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref FirstPrivateCIDR
      AvailabilityZone: !Select [0,!GetAZs '']
  SecondPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: !Ref SecondPrivateCIDR
      AvailabilityZone: !Select [1,!GetAZs '']
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref InternetGateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayIP.AllocationId
      SubnetId: !Ref FirstPublicSubnet
      Tags:
        - Key: stack
          Value: production
  NatGatewayIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: stack
        Value: production
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  FirstPublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FirstPublicSubnet
      RouteTableId: !Ref PublicRouteTable
  SecondPublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SecondPublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
      - Key: stack
        Value: production
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  FirstPrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FirstPrivateSubnet
      RouteTableId: !Ref PrivateRouteTable
  SecondPrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SecondPrivateSubnet
      RouteTableId: !Ref PrivateRouteTable